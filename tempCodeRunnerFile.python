import cv2

# Load the image
img = cv2.imread('car.jpg')

# Convert to grayscale
gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)

# Apply Gaussian blur
gray = cv2.GaussianBlur(gray, (5, 5), 0)

# Perform edge detection
edges = cv2.Canny(gray, 50, 150)

# Find contours
contours, hierarchy = cv2.findContours(edges.copy(), cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)

# Sort contours by area
contours = sorted(contours, key=cv2.contourArea, reverse=True)[:10]

# Initialize license plate contour and x, y coordinates
plate_contour = None
x, y, w, h = 0, 0, 0, 0

# Loop over contours
for contour in contours:
    # Approximate contour
    peri = cv2.arcLength(contour, True)
    approx = cv2.approxPolyDP(contour, 0.02 * peri, True)

    # If the contour has four vertices, assume it is a license plate
    if len(approx) == 4:
        plate_contour = approx
        x, y, w, h = cv2.boundingRect(contour)
        break

# Draw license plate contour
cv2.drawContours(img, [plate_contour], -1, (0, 255, 0), 2)

# Crop license plate region from the image
plate = img[y:y + h, x:x + w]

# Display the original image and the license plate
cv2.imshow('Original Image', img)
cv2.imshow('License Plate', plate)
cv2.waitKey(0)
